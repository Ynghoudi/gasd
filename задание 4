using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Windows.Forms;

namespace RectangleApp
{
    public partial class Form1 : Form
    {
        private Point startPoint;
        private bool isDrawing = false;
        private List<RectangleItem> rectangles = new List<RectangleItem>();
        private int rectangleCount = 0;

        public Form1()
        {
            InitializeComponent();
            this.MouseDown += Form1_MouseDown;
            this.MouseMove += Form1_MouseMove;
            this.MouseUp += Form1_MouseUp;
            this.Paint += Form1_Paint;
        }

        private void Form1_MouseDown(object sender, MouseEventArgs e)
        {
            if (e.Button == MouseButtons.Left)
            {
                isDrawing = true;
                startPoint = e.Location;
            }
        }

        private void Form1_MouseMove(object sender, MouseEventArgs e)
        {
            if (isDrawing)
            {
                this.Invalidate();
            }
        }

        private void Form1_MouseUp(object sender, MouseEventArgs e)
        {
            if (isDrawing)
            {
                isDrawing = false;

               
                Point endPoint = e.Location;
                Rectangle rect = new Rectangle(Math.Min(startPoint.X, endPoint.X),
                                                Math.Min(startPoint.Y, endPoint.Y),
                                                Math.Abs(startPoint.X - endPoint.X),
                                                Math.Abs(startPoint.Y - endPoint.Y));

              
                if (rect.Width >= 10 && rect.Height >= 10)
                {
                    rectangleCount++;
                    rectangles.Add(new RectangleItem(rect, rectangleCount));
                }
                else
                {
                    MessageBox.Show("Минимальный размер 'статика' составляет 10x10.", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                }

                this.Invalidate(); 
            }
        }

        private void Form1_Paint(object sender, PaintEventArgs e)
        {
            foreach (var rectangle in rectangles)
            {
                e.Graphics.DrawRectangle(Pens.Black, rectangle.Rect);
                e.Graphics.DrawString(rectangle.Number.ToString(), this.Font, Brushes.Black, rectangle.Rect.Location);
            }

            if (isDrawing)
            {
                Point endPoint = this.PointToClient(MousePosition);
                Rectangle tempRect = new Rectangle(Math.Min(startPoint.X, endPoint.X),
                                                   Math.Min(startPoint.Y, endPoint.Y),
                                                   Math.Abs(startPoint.X - endPoint.X),
                                                   Math.Abs(startPoint.Y - endPoint.Y));
                e.Graphics.DrawRectangle(Pens.Red, tempRect);
            }
        }

        protected override void OnMouseClick(MouseEventArgs e)
        {
            if (e.Button == MouseButtons.Right)
            {
                var clickedRect = rectangles
                    .Where(r => r.Rect.Contains(e.Location))
                    .OrderByDescending(r => r.Number)
                    .FirstOrDefault();

                if (clickedRect != null)
                {
                    string message = $"Площадь: {clickedRect.Rect.Width * clickedRect.Rect.Height}, " +
                                     $"Координаты: ({clickedRect.Rect.Location.X}, {clickedRect.Rect.Location.Y})";
                    MessageBox.Show(message, "Информация", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
            }

            base.OnMouseClick(e);
        }
    }

    public class RectangleItem
    {
        public Rectangle Rect { get; }
        public int Number { get; }

        public RectangleItem(Rectangle rect, int number)
        {
            Rect = rect;
            Number = number;
        }
    }
}
